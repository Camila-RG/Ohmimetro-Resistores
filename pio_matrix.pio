.program pio_matrix
.side_set 1

.define public T1 2
.define public T2 5
.define public T3 3

.wrap_target
bitloop:
    out x, 1         side 0 [T3 - 1]
    jmp !x do_zero   side 1 [T1 - 1]
    jmp bitloop      side 1 [T2 - 1]
do_zero:
    jmp bitloop      side 0 [T2 - 1]
.wrap

% c-sdk {
extern inline void pio_matrix_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = pio_matrix_program_get_default_config(offset);

    sm_config_set_sideset_pins(&c, pin);

    pio_gpio_init(pio, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);

    float div = clock_get_hz(clk_sys) / 8000000.0f; // 8MHz
    sm_config_set_clkdiv(&c, div);

    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}
